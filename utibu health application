  
utibuapp/decorators.py
@@ -0,0 +1,39 @@
from django.http import HttpResponse
from django.shortcuts import redirect

def unauthenticated_user(view_func):
    def wrapper_func(request,*args, **kwargs):
        if request.user.is_authenticated:
             return redirect('dashboard')
        else:
             return view_func(request, *args, **kwargs)

    return wrapper_func


def allowed_users(allowed_roles=[]):
     def decorator(view_func):
          def wrapper_func(request,*args, **kwargs):
               group = None
               if request.user.groups.exists():
                    group = request.user.groups.all()[0].name
               if group in allowed_roles:
                    return view_func(request,*args, **kwargs)
               else:
                    return HttpResponse('you are not authorized to access this page')
          return wrapper_func
     return decorator

def admin_only(view_func):
     def wrapper_function(request, *args,**kwargs):
          group = None
          if request.user.groups.exists():
               group = request.user.groups.all()[0]

          if group == 'customer':
               return redirect('user-page')

          if group == 'admin':
               return view_func(request,*args,**kwargs)

     return wrapper_function
 2 changes: 2 additions & 0 deletions2  
utibuapp/templates/accounts/dashboard.html
@@ -1,9 +1,11 @@
{% extends 'index.html'%}

{%block content%}
{% include 'accounts/messages.html'%}
{% include 'accounts/status.html'%}

<div class="row m-2">

    <div class="col md-5">
        <h5>CUSTOMERS:</h5>
        <hr>
  9 changes: 6 additions & 3 deletions9  
utibuapp/templates/accounts/login.html
@@ -14,7 +14,8 @@
			margin: 0;
			padding: 0;
			height: 100%;
			background: #7abecc !important;
			background: rgb(2,0,36);
			background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,100,121,1) 35%, rgba(0,212,255,1) 100%);
		}
		.user_card {
			width: 350px;
@@ -77,6 +78,7 @@
</head>
<body>
	<div class="container h-100">
		{% include 'accounts/messages.html'%}
		<div class="d-flex justify-content-center h-100">
			<div class="user_card">
				<div class="d-flex justify-content-center">
@@ -86,17 +88,18 @@ <h3 id="form-title">LOGIN</h3>
				</div>
				<div class="d-flex justify-content-center form_container">
					<form method="POST" action="">
						{%csrf_token%}
						<div class="input-group mb-3">
							<div class="input-group-append">
								<span class="input-group-text"><i class="fas fa-user"></i></span>
							</div>
							{{form.username}}
							<input type="text" name="username" placeholder="Username..." class="form-control">
						</div>
						<div class="input-group mb-2">
							<div class="input-group-append">
								<span class="input-group-text"><i class="fas fa-key"></i></span>
							</div>
								{{form.password}}
							<input type="password" name="password" placeholder="Password..." class="form-control" >
						</div>

							<div class="d-flex justify-content-center mt-3 login_container">
  12 changes: 12 additions & 0 deletions12  
utibuapp/templates/accounts/messages.html
@@ -0,0 +1,12 @@
{% if messages %}
    {% for message in messages %}
        <div class="container">
            <div class="alert alert-{{ message.tags}} alert-dismissable fade show" role="alert">
                {{ message }}
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
    {% endfor %}
{% endif %}
  4 changes: 3 additions & 1 deletion4  
utibuapp/templates/accounts/register.html
@@ -13,7 +13,8 @@
			margin: 0;
			padding: 0;
			height: 100%;
			background: #000809 !important;
			background: rgb(2,0,36);
			background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,100,121,1) 35%, rgba(0,212,255,1) 100%);
		}
		.user_card {
			width: 350px;
@@ -68,6 +69,7 @@
</head>
<body>
	<div class="container h-100">
		{% include 'accounts/messages.html'%}
		<div class="d-flex justify-content-center h-100">
			<div class="user_card">
				<div class="d-flex justify-content-center">
 9 changes: 9 additions & 0 deletions9  
utibuapp/templates/accounts/userpage.html
@@ -0,0 +1,9 @@
{% extends 'index.html'%}

{%block content%}
{% include 'accounts/messages.html'%}
{% include 'accounts/status.html'%}
<hr>
<h2>user profile</h2>

{%endblock%}
  18 changes: 18 additions & 0 deletions18  
utibuapp/templates/common_templates/navbar.html
@@ -1,3 +1,17 @@
<style>
  .hello-msg{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    color: white;
    margin-right: 10px;
  }
</style>




<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="{%url 'dashboard' %}">Utibu health</a>
@@ -16,4 +30,8 @@
        </ul>
      </div>
    </div>
    <div class="hello-msg">
      <span>hello,{{request.user}}</span>
      <span><a style="color: white; text-decoration: none; margin-left: 15px;" href="{% url 'logout' %}">logout</a></span>
    </div>
  </nav>
  2 changes: 2 additions & 0 deletions2  
utibuapp/urls.py
@@ -5,7 +5,9 @@
urlpatterns = [

    path('login/',views.login_view,name='login'),
    path('logout/',views.logoutuser,name='logout'),
    path('register/',views.register_view,name='register'),
    path('user/', views.userpage,name='user-page'),

    path('products/',views.productsView,name='products'),
    path('customers/<str:pk>/',views.customersView,name='customer'),
  67 changes: 58 additions & 9 deletions67  
utibuapp/views.py
@@ -3,22 +3,51 @@
from utibuapp.models import Customer,Product,Order
from .forms import OrderForm,CustomerForm,CreateUserForm
from django.contrib import messages
from django.contrib.auth import authenticate,login,logout
from django.contrib.auth.decorators import login_required
from .decorators import unauthenticated_user,allowed_users,admin_only
from django.contrib.auth.models import Group


# Create your views here.

@unauthenticated_user
def login_view(request):
    context = {}
    return render(request,'accounts/login.html',context)

def register_view(request):
    if request.user.is_authenticated:
        return redirect('dashboard')
    else:

        if request.method == 'POST':
            username=request.POST.get('username')
            password=request.POST.get('password')
            user = authenticate(request,username=username,password=password)
            if user is not None:
                login(request,user)
                messages.success(request,'welcome back')
                return redirect('dashboard')
            else:
                messages.info(request,'username or password is incorrect')
                return redirect('dashboard')          

        context = {}
        return render(request,'accounts/login.html',context)

def logoutuser(request):
    logout(request)
    return redirect('login')

@unauthenticated_user
def register_view(request):  

    form = CreateUserForm()

    if request.method =='POST':
        form = CreateUserForm(request.POST)
        if form.is_valid:
            form.save()
            user = form.cleaned_data.get('username')
            user = form.save()
            username = form.cleaned_data.get('username')

            group = Group.objects.get(name='customer')
            user.groups.add(group)
            messages.success(request,'account was created for' + user)
            return redirect('login')
        else:
@@ -27,6 +56,12 @@ def register_view(request):
    context = {'form':form}
    return render(request,'accounts/register.html',context)

def userpage(request):
    context = {}
    return render(request,'accounts/userpage.html')

@login_required(login_url='login')
@admin_only
def dashboardView(request):
    customers = Customer.objects.all()
    orders = Order.objects.all()
@@ -41,6 +76,8 @@ def dashboardView(request):

    return render(request,'accounts/dashboard.html',context)

@login_required(login_url='login')
@allowed_users(allowed_roles=['admin'])
def customersView(request,pk):
    customer = Customer.objects.get(id=pk)
    orders = customer.order_set.all()
@@ -50,7 +87,8 @@ def customersView(request,pk):

    return render(request,'accounts/customers.html',context)


@login_required(login_url='login')
@allowed_users(allowed_roles=['admin'])
def create_customer(request):
    form = CustomerForm()
    if request.method == 'POST':
@@ -61,6 +99,8 @@ def create_customer(request):
    context = {'form':form}
    return render(request,'accounts/create_customer.html',context)

@login_required(login_url='login')
@allowed_users(allowed_roles=['admin'])
def update_customer(request,pk):
    customer = Customer.objects.get(id=pk)
    form = CustomerForm(instance=customer)
@@ -72,6 +112,8 @@ def update_customer(request,pk):
    context = {'form':form}
    return render(request,'accounts/create_customer.html',context)

@login_required(login_url='login')
@allowed_users(allowed_roles=['admin'])
def delete_customer(request,pk):
    customer = Customer.objects.get(id=pk)
    if request.method == 'POST':
@@ -81,12 +123,15 @@ def delete_customer(request,pk):
    return render(request,'accounts/delete_customer.html',context)


@login_required(login_url='login')
@allowed_users(allowed_roles=['admin'])
def productsView(request):
    products = Product.objects.all()
    context = {'products':products}
    return render(request,'accounts/products.html',context)


@login_required(login_url='login')
@allowed_users(allowed_roles=['admin'])
def create_order(request):
    form = OrderForm()
    if request.method == 'POST':
@@ -101,6 +146,8 @@ def create_order(request):
    context = {'form':form}
    return render(request,'accounts/order_form.html',context)

@login_required(login_url='login')
@allowed_users(allowed_roles=['admin'])
def update_order(request,pk):
    order = Order.objects.get(id=pk)
    form = OrderForm(instance=order)
@@ -115,6 +162,8 @@ def update_order(request,pk):
    context = {'form':form}
    return render(request,'accounts/order_form.html',context)

@login_required(login_url='login')
@allowed_users(allowed_roles=['admin'])
def delete_order(request,pk):
    order = Order.objects.get(id=pk)
    if request.method == 'POST':
